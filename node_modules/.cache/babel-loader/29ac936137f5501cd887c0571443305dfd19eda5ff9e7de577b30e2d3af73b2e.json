{"ast":null,"code":"/*import React from 'react';\nimport axios from 'axios';\nimport { Activity } from '../types/Activity';\nimport { User } from '../types/User';\n\ninterface BookingButtonProps {\n  activity: Activity;\n  updateUserActivities: (activity: Activity) => void;\n  loggedInUser:User\n}\n\nfunction BookingButton({ activity, updateUserActivities, loggedInUser }: BookingButtonProps) {\n  function handleBookActivity() {\n    // Replace with the actual user ID\n    const userId = loggedInUser.id;\n    console.log(activity)\n    // Create a new booking object\n    const booking = {\n      userId: userId,\n      activityId: activity.id,\n      bookedDate: new Date(),\n    };\n\n    // Send the booking information to your backend\n    axios\n      .post('/bookings', booking)\n      .then((response) => {\n        console.log('Booking successful:', response.data);\n        const newActivity = {\n          id: activity.id,\n          title: activity.title,\n          content: activity.content,\n          date: new Date(activity.date),\n          maxCount: activity.maxCount,\n        };\n        // After a successful booking, update the user's activities\n        updateUserActivities(newActivity); // Skicka med aktiviteten som parameter\n      })\n      .catch((error) => {\n        console.error('Error booking activity:', error);\n      });\n  }\n\n  return (\n    <button onClick={handleBookActivity}>Book Activity</button>\n  );\n}\n\nexport default BookingButton;\n*/","map":{"version":3,"names":[],"sources":["/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/components/BookingButton.tsx"],"sourcesContent":["/*import React from 'react';\nimport axios from 'axios';\nimport { Activity } from '../types/Activity';\nimport { User } from '../types/User';\n\ninterface BookingButtonProps {\n  activity: Activity;\n  updateUserActivities: (activity: Activity) => void;\n  loggedInUser:User\n}\n\nfunction BookingButton({ activity, updateUserActivities, loggedInUser }: BookingButtonProps) {\n  function handleBookActivity() {\n    // Replace with the actual user ID\n    const userId = loggedInUser.id;\n    console.log(activity)\n    // Create a new booking object\n    const booking = {\n      userId: userId,\n      activityId: activity.id,\n      bookedDate: new Date(),\n    };\n\n    // Send the booking information to your backend\n    axios\n      .post('/bookings', booking)\n      .then((response) => {\n        console.log('Booking successful:', response.data);\n        const newActivity = {\n          id: activity.id,\n          title: activity.title,\n          content: activity.content,\n          date: new Date(activity.date),\n          maxCount: activity.maxCount,\n        };\n        // After a successful booking, update the user's activities\n        updateUserActivities(newActivity); // Skicka med aktiviteten som parameter\n      })\n      .catch((error) => {\n        console.error('Error booking activity:', error);\n      });\n  }\n\n  return (\n    <button onClick={handleBookActivity}>Book Activity</button>\n  );\n}\n\nexport default BookingButton;\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}