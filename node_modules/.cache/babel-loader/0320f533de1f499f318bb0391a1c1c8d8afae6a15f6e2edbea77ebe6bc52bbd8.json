{"ast":null,"code":"var _jsxFileName = \"/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport Layout from './components/Layout';\nimport BookingPage from './pages/BookingPage';\nimport AdminPage from './pages/AdminPage';\nimport PageBanner from './components/PageBanner';\nimport AddActivityPage from './pages/AddActivityPage';\nimport ViewUsers from './pages/ViewUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({\n    id: 0,\n    username: '',\n    role: 'USER',\n    activities: [],\n    password: ''\n  });\n  const [activities, setActivities] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/user') // Använd rätt endpoint här\n    .then(response => response.json()).then(data => setUsers(data)); // Uppdatera aktivitetsstaten med data från Mirage\n    console.log(users);\n  }, []);\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/activities') // Använd rätt endpoint här\n    .then(response => response.json()).then(data => setActivities(data)); // Uppdatera aktivitetsstaten med data från Mirage\n    console.log(activities);\n  }, []);\n  function onAddActivity(id, title, content, date, maxCount) {\n    // Skapa en ny aktivitet med de givna parametrarna\n    const newActivity = {\n      id,\n      title,\n      content,\n      date,\n      maxCount\n    };\n\n    // Skapa en kopia av den befintliga activities-arrayen och lägg till den nya aktiviteten\n    const updatedActivities = [...activities, newActivity];\n\n    // Uppdatera activities-arrayen med den nya arrayen\n    setActivities(updatedActivities);\n  }\n  useEffect(() => {\n    const storedUserData = localStorage.getItem(\"loggedInUser\");\n    if (storedUserData) {\n      const user = JSON.parse(storedUserData);\n      console.log(user);\n      const newUser = convertUser(user.id, user.username, user.role, user.activities, user.password);\n      setIsLoggedIn(true);\n      setLoggedInUser(newUser);\n    }\n    console.log(loggedInUser);\n  }, []);\n  function convertUser(id, username, role, activities, password) {\n    const newUser = {\n      id: id,\n      username: username,\n      role: role,\n      activities: activities.map(activity => {\n        const newActivity = {\n          id: activity.id,\n          title: activity.title,\n          content: activity.content,\n          date: new Date(activity.date),\n          maxCount: activity.maxCount\n        };\n        return newActivity;\n      }),\n      password: password\n    };\n    return newUser;\n  }\n  function handleLogin(id, username, role, activities, password) {\n    setIsLoggedIn(true);\n    console.log('in app');\n    setLoggedInUser(convertUser(id, username, role, activities, password));\n    localStorage.setItem(\"loggedInUser\", JSON.stringify({\n      username,\n      role,\n      activities\n    }));\n  }\n  function updateUserActivities(activity) {\n    // Skapa en kopia av användarens aktivitetslista och lägg till den nya aktiviteten\n    const updatedActivities = [...loggedInUser.activities, activity];\n\n    // Uppdatera loggedInUser med den uppdaterade aktivitetslistan\n    setLoggedInUser({\n      ...loggedInUser,\n      activities: updatedActivities\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bookings\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PageBanner, {\n              ...loggedInUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(BookingPage, {\n              loggedInUser: loggedInUser,\n              upDateUserActivities: updateUserActivities,\n              activities: activities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PageBanner, {\n              ...loggedInUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(AdminPage, {\n              loggedInUser: loggedInUser,\n              upDateUserActivities: updateUserActivities,\n              activities: activities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(AddActivityPage, {\n            activities: activities,\n            setActivities: setActivities,\n            onAddActivity: onAddActivity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/view\",\n        element: /*#__PURE__*/_jsxDEV(ViewUsers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wxHQ3yLgmo60pD3GZSPB7MmNCek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","LoginPage","Layout","BookingPage","AdminPage","PageBanner","AddActivityPage","ViewUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","loggedInUser","setLoggedInUser","id","username","role","activities","password","setActivities","users","setUsers","fetch","then","response","json","data","console","log","onAddActivity","title","content","date","maxCount","newActivity","updatedActivities","storedUserData","localStorage","getItem","user","JSON","parse","newUser","convertUser","map","activity","Date","handleLogin","setItem","stringify","updateUserActivities","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","onLogin","upDateUserActivities","_c","$RefreshReg$"],"sources":["/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport Layout from './components/Layout';\nimport BookingPage from './pages/BookingPage';\nimport AdminPage from './pages/AdminPage';\nimport { Activity } from './types/Activity';\nimport PageBanner from './components/PageBanner';\nimport { UserRole } from './types/User';\nimport AddActivityPage from './pages/AddActivityPage';\nimport { User } from './types/User';\nimport ViewUsers from './pages/ViewUsers';\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({ id:0, username: '', role: 'USER' as UserRole, activities: [] as Activity[], password: '' });\n  const [activities, setActivities] = useState([] as Activity[]);\n  const [users,setUsers]= useState([] as User[])\n\n\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/user') // Använd rätt endpoint här\n      .then((response) => response.json())\n      .then((data) => setUsers(data)); // Uppdatera aktivitetsstaten med data från Mirage\n      console.log(users)\n  }, []);\n\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/activities') // Använd rätt endpoint här\n      .then((response) => response.json())\n      .then((data) => setActivities(data)); // Uppdatera aktivitetsstaten med data från Mirage\n      console.log(activities)\n  }, []);\n\n  function onAddActivity(id: number, title: string, content: string, date: Date, maxCount: number) {\n    // Skapa en ny aktivitet med de givna parametrarna\n    const newActivity: Activity = {\n      id,\n      title,\n      content,\n      date,\n      maxCount,\n    };\n  \n    // Skapa en kopia av den befintliga activities-arrayen och lägg till den nya aktiviteten\n    const updatedActivities = [...activities, newActivity];\n  \n    // Uppdatera activities-arrayen med den nya arrayen\n    setActivities(updatedActivities);\n  }\n\n  useEffect(() => {\n    const storedUserData = localStorage.getItem(\"loggedInUser\");\n    if (storedUserData) {\n      const user = JSON.parse(storedUserData);\n      console.log(user)\n      const newUser: User = convertUser( user.id,user.username, user.role,user.activities,user.password)\n      setIsLoggedIn(true);\n      setLoggedInUser(newUser);\n    }\n    console.log(loggedInUser);\n  }, []);\nfunction convertUser(id:number,username:string,role:UserRole, activities:Activity[],password:string):User{\n  const newUser: User = {\n    id:id,\n    username: username,\n    role: role,\n    activities: activities.map((activity:Activity) => {\n      const newActivity:Activity = {\n        id: activity.id,\n        title : activity.title,\n        content: activity.content,\n        date: new Date(activity.date),\n        maxCount: activity.maxCount\n      }\n      return newActivity\n    }),\n    password: password,\n  }\n  return newUser;\n}\n\n  function handleLogin(id:number,username: string, role: UserRole, activities: Activity[], password: string) {\n    setIsLoggedIn(true);\n    console.log('in app');\n\n    setLoggedInUser(convertUser( id,username, role, activities, password ));\n    localStorage.setItem(\"loggedInUser\", JSON.stringify({ username, role, activities }))\n  }\n\n  function updateUserActivities(activity: Activity) {\n    // Skapa en kopia av användarens aktivitetslista och lägg till den nya aktiviteten\n    const updatedActivities = [...loggedInUser.activities, activity];\n    \n    // Uppdatera loggedInUser med den uppdaterade aktivitetslistan\n    setLoggedInUser({ ...loggedInUser, activities: updatedActivities });\n  }\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path='/' element={<Layout />}>\n          <Route index element={<LoginPage onLogin={handleLogin} />} />\n          <Route\n            path=\"/bookings\"\n            element={\n              <>\n                {isLoggedIn && <PageBanner {...loggedInUser} />}\n               \n                  <BookingPage loggedInUser={loggedInUser} upDateUserActivities={updateUserActivities} activities={activities}/> \n                \n              </>\n            }\n          />\n             <Route\n            path=\"/admin\"\n            element={\n              <>\n                {isLoggedIn && <PageBanner {...loggedInUser} />}\n               \n                  <AdminPage loggedInUser={loggedInUser} upDateUserActivities={updateUserActivities} activities={activities}/> \n                \n              </>\n            }\n          />\n                    <Route path=\"/add\" element={<AddActivityPage activities={activities} setActivities={setActivities} onAddActivity={onAddActivity} />} />\n\n        </Route>\n        <Route path='/view' element={<ViewUsers/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}