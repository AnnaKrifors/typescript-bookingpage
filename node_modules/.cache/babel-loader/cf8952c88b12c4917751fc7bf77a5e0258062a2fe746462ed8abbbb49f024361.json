{"ast":null,"code":"var _jsxFileName = \"/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/components/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm(props) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(username, password);\n    this.get('/user', (schema, request) => {\n      const {\n        username,\n        password\n      } = request.queryParams;\n      const user = schema.db.users.findBy({\n        name: username,\n        password\n      });\n      if (user) {\n        return new Response(200, {\n          'Content-Type': 'application/json'\n        }, user);\n      } else {\n        return new Response(401, {\n          'Content-Type': 'application/json'\n        }, {\n          error: 'Invalid credentials'\n        });\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LoginForm","props","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","console","log","get","schema","request","queryParams","user","db","users","findBy","name","Response","onSubmit","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/components/LoginForm.tsx"],"sourcesContent":["import { Activity } from \"../types/Activity\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\ninterface LoginFormProps{\n    onLogin:(username:string,role:string,activities:Activity[],password:string) => void;\n}\n\nfunction LoginForm(props:LoginFormProps):JSX.Element{\n    const [username, setUsername] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    function handleSubmit(event: React.FormEvent) {\n        event.preventDefault();\n        console.log(username,password)\n    \n        this.get('/user', (schema, request) => {\n            const { username, password } = request.queryParams;\n            const user = schema.db.users.findBy({ name: username, password });\n            \n            if (user) {\n              return new Response(200, { 'Content-Type': 'application/json' }, user);\n            } else {\n              return new Response(401, { 'Content-Type': 'application/json' }, { error: 'Invalid credentials' });\n            }\n          });\n          \n       \n      }\n    return(\n        <form onSubmit={handleSubmit}>\n            <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n       \n      />\n          <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n       \n      />\n        <button type=\"submit\">Log in!</button>\n    </form>\n    )\n}\n\nexport default LoginForm;"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOjC,SAASC,SAASA,CAACC,KAAoB,EAAa;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAE9C,SAASY,YAAYA,CAACC,KAAsB,EAAE;IAC1CA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACV,QAAQ,EAACE,QAAQ,CAAC;IAE9B,IAAI,CAACS,GAAG,CAAC,OAAO,EAAE,CAACC,MAAM,EAAEC,OAAO,KAAK;MACnC,MAAM;QAAEb,QAAQ;QAAEE;MAAS,CAAC,GAAGW,OAAO,CAACC,WAAW;MAClD,MAAMC,IAAI,GAAGH,MAAM,CAACI,EAAE,CAACC,KAAK,CAACC,MAAM,CAAC;QAAEC,IAAI,EAAEnB,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAEjE,IAAIa,IAAI,EAAE;QACR,OAAO,IAAIK,QAAQ,CAAC,GAAG,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC,EAAEL,IAAI,CAAC;MACxE,CAAC,MAAM;QACL,OAAO,IAAIK,QAAQ,CAAC,GAAG,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC,EAAE;UAAEhB,KAAK,EAAE;QAAsB,CAAC,CAAC;MACpG;IACF,CAAC,CAAC;EAGN;EACF,oBACIR,OAAA;IAAMyB,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBACzB1B,OAAA;MACJ2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGC,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9C,CAAC,eACEpC,OAAA;MACF2B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9C,CAAC,eACApC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEX;AAACjC,EAAA,CAzCQF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AA2ClB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}