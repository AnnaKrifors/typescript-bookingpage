{"ast":null,"code":"var _jsxFileName = \"/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport Layout from './components/Layout';\nimport BookingPage from './pages/BookingPage';\nimport AdminPage from './pages/AdminPage';\nimport PageBanner from './components/PageBanner';\nimport AddActivityPage from './pages/AddActivityPage';\nimport ViewUsers from './pages/ViewUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({\n    id: 0,\n    username: '',\n    role: 'USER',\n    activities: [],\n    password: ''\n  });\n  const [activities, setActivities] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('/users').then(response => response.json()).then(data => {\n      setUsers(data.map(user => convertUser(user.id, user.username, user.role, user.activities, user.password)));\n      console.log(data); // Här loggar du den hämtade användardata\n    });\n  }, []);\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/activities') // Använd rätt endpoint här\n    .then(response => response.json()).then(data => setActivities(data)); // Uppdatera aktivitetsstaten med data från Mirage\n  }, []);\n  function onAddActivity(id, title, content, date, maxCount) {\n    // Skapa en ny aktivitet med de givna parametrarna\n    const newActivity = {\n      id,\n      title,\n      content,\n      date,\n      maxCount\n    };\n\n    // Skapa en kopia av den befintliga activities-arrayen och lägg till den nya aktiviteten\n    const updatedActivities = [...activities, newActivity];\n\n    // Uppdatera activities-arrayen med den nya arrayen\n    setActivities(updatedActivities);\n  }\n  useEffect(() => {\n    const storedUserData = localStorage.getItem(\"loggedInUser\");\n    if (storedUserData) {\n      const user = JSON.parse(storedUserData);\n      console.log(user);\n      const newUser = convertUser(user.id, user.username, user.role, user.activities, user.password);\n      setIsLoggedIn(true);\n      setLoggedInUser(newUser);\n    }\n    console.log(loggedInUser);\n  }, []);\n  function convertUser(id, username, role, activities, password) {\n    const newUser = {\n      id: id,\n      username: username,\n      role: role,\n      activities: activities.map(activity => {\n        const newActivity = {\n          id: activity.id,\n          title: activity.title,\n          content: activity.content,\n          date: new Date(activity.date),\n          maxCount: activity.maxCount\n        };\n        return newActivity;\n      }),\n      password: password\n    };\n    return newUser;\n  }\n  function handleLogin(id, username, role, activities, password) {\n    setIsLoggedIn(true);\n    console.log('in app');\n    setLoggedInUser(convertUser(id, username, role, activities, password));\n    localStorage.setItem(\"loggedInUser\", JSON.stringify({\n      username,\n      role,\n      activities\n    }));\n  }\n  function updateUserActivities(activity) {\n    // Skapa en kopia av användarens aktivitetslista och lägg till den nya aktiviteten\n    const updatedActivities = [...loggedInUser.activities, activity];\n\n    // Uppdatera loggedInUser med den uppdaterade aktivitetslistan\n    setLoggedInUser({\n      ...loggedInUser,\n      activities: updatedActivities\n    });\n  }\n\n  //nytt under:\n\n  // Funktion för att ta bort en aktivitet från användarens lista av aktiviteter\n  function handleRemoveActivity(activityId) {\n    // Skapa en kopia av användarens aktuella aktivitetslista\n    const updatedActivities = [...loggedInUser.activities];\n\n    // Hitta indexet för den aktivitet som ska tas bort\n    const indexToRemove = updatedActivities.findIndex(activity => activity.id === activityId);\n\n    // Ta bort aktiviteten om den hittades\n    if (indexToRemove !== -1) {\n      updatedActivities.splice(indexToRemove, 1);\n\n      // Uppdatera användarens aktivitetslista med den uppdaterade listan\n      setLoggedInUser({\n        ...loggedInUser,\n        activities: updatedActivities\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bookings\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PageBanner, {\n              handleRemoveActivity: handleRemoveActivity,\n              ...loggedInUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(BookingPage, {\n              loggedInUser: loggedInUser,\n              upDateUserActivities: updateUserActivities,\n              activities: activities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PageBanner, {\n              handleRemoveActivity: handleRemoveActivity,\n              ...loggedInUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(AdminPage, {\n              loggedInUser: loggedInUser,\n              upDateUserActivities: updateUserActivities,\n              activities: activities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(AddActivityPage, {\n            activities: activities,\n            setActivities: setActivities,\n            onAddActivity: onAddActivity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/view\",\n        element: /*#__PURE__*/_jsxDEV(ViewUsers, {\n          convertUser: convertUser,\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7s8iJEfb92j9gOzfLlgVvxWa5hg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","LoginPage","Layout","BookingPage","AdminPage","PageBanner","AddActivityPage","ViewUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","loggedInUser","setLoggedInUser","id","username","role","activities","password","setActivities","users","setUsers","fetch","then","response","json","data","map","user","convertUser","console","log","onAddActivity","title","content","date","maxCount","newActivity","updatedActivities","storedUserData","localStorage","getItem","JSON","parse","newUser","activity","Date","handleLogin","setItem","stringify","updateUserActivities","handleRemoveActivity","activityId","indexToRemove","findIndex","splice","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","onLogin","upDateUserActivities","_c","$RefreshReg$"],"sources":["/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport Layout from './components/Layout';\nimport BookingPage from './pages/BookingPage';\nimport AdminPage from './pages/AdminPage';\nimport { Activity } from './types/Activity';\nimport PageBanner from './components/PageBanner';\nimport { UserRole } from './types/User';\nimport AddActivityPage from './pages/AddActivityPage';\nimport { User } from './types/User';\nimport ViewUsers from './pages/ViewUsers';\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({ id:0, username: '', role: 'USER' as UserRole, activities: [] as Activity[], password: '' });\n  const [activities, setActivities] = useState([] as Activity[]);\n  const [users, setUsers]= useState([] as User[])\n\n\n  useEffect(() => {\n    fetch('/users')\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data.map((user)=> convertUser(user.id, user.username, user.role, user.activities, user.password)));\n        console.log(data); // Här loggar du den hämtade användardata\n      });\n  }, []);\n  \n\n\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/activities') // Använd rätt endpoint här\n      .then((response) => response.json())\n      .then((data) => setActivities(data)); // Uppdatera aktivitetsstaten med data från Mirage\n      \n  }, []);\n\n \n\n  function onAddActivity(id: number, title: string, content: string, date: Date, maxCount: number) {\n    // Skapa en ny aktivitet med de givna parametrarna\n    const newActivity: Activity = {\n      id,\n      title,\n      content,\n      date,\n      maxCount,\n    };\n  \n    // Skapa en kopia av den befintliga activities-arrayen och lägg till den nya aktiviteten\n    const updatedActivities = [...activities, newActivity];\n  \n    // Uppdatera activities-arrayen med den nya arrayen\n    setActivities(updatedActivities);\n  }\n\n  useEffect(() => {\n    const storedUserData = localStorage.getItem(\"loggedInUser\");\n    if (storedUserData) {\n      const user = JSON.parse(storedUserData);\n      console.log(user)\n      const newUser: User = convertUser( user.id,user.username, user.role,user.activities,user.password)\n      setIsLoggedIn(true);\n      setLoggedInUser(newUser);\n    }\n    console.log(loggedInUser);\n  }, []);\nfunction convertUser(id:number,username:string,role:UserRole, activities:Activity[],password:string):User{\n  const newUser: User = {\n    id:id,\n    username: username,\n    role: role,\n    activities: activities.map((activity:Activity) => {\n      const newActivity:Activity = {\n        id: activity.id,\n        title : activity.title,\n        content: activity.content,\n        date: new Date(activity.date),\n        maxCount: activity.maxCount\n      }\n      return newActivity\n    }),\n    password: password,\n  }\n  return newUser;\n}\n\n  function handleLogin(id:number,username: string, role: UserRole, activities: Activity[], password: string) {\n    setIsLoggedIn(true);\n    console.log('in app');\n\n    setLoggedInUser(convertUser( id,username, role, activities, password ));\n    localStorage.setItem(\"loggedInUser\", JSON.stringify({ username, role, activities }))\n  }\n\n  function updateUserActivities(activity: Activity) {\n    // Skapa en kopia av användarens aktivitetslista och lägg till den nya aktiviteten\n    const updatedActivities = [...loggedInUser.activities, activity];\n    \n    // Uppdatera loggedInUser med den uppdaterade aktivitetslistan\n    setLoggedInUser({ ...loggedInUser, activities: updatedActivities });\n  }\n\n  //nytt under:\n\n   // Funktion för att ta bort en aktivitet från användarens lista av aktiviteter\n   function handleRemoveActivity(activityId: number) {\n    // Skapa en kopia av användarens aktuella aktivitetslista\n    const updatedActivities = [...loggedInUser.activities];\n\n    // Hitta indexet för den aktivitet som ska tas bort\n    const indexToRemove = updatedActivities.findIndex((activity) => activity.id === activityId);\n\n    // Ta bort aktiviteten om den hittades\n    if (indexToRemove !== -1) {\n      updatedActivities.splice(indexToRemove, 1);\n\n      // Uppdatera användarens aktivitetslista med den uppdaterade listan\n      setLoggedInUser({ ...loggedInUser, activities: updatedActivities });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path='/' element={<Layout />}>\n          <Route index element={<LoginPage onLogin={handleLogin} />} />\n          <Route\n            path=\"/bookings\"\n            element={\n              <>\n                {isLoggedIn && <PageBanner handleRemoveActivity={handleRemoveActivity} {...loggedInUser} />}\n               \n                  <BookingPage loggedInUser={loggedInUser} upDateUserActivities={updateUserActivities} activities={activities}/> \n                \n              </>\n            }\n          />\n             <Route\n            path=\"/admin\"\n            element={\n              <>\n                {isLoggedIn && <PageBanner handleRemoveActivity={handleRemoveActivity} {...loggedInUser} />}\n               \n                  <AdminPage loggedInUser={loggedInUser} upDateUserActivities={updateUserActivities} activities={activities}/> \n                \n              </>\n            }\n          />\n                    <Route path=\"/add\" element={<AddActivityPage activities={activities} setActivities={setActivities} onAddActivity={onAddActivity} />} />\n\n        </Route>\n        <Route path='/view' element={<ViewUsers convertUser={convertUser} users={users}/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}