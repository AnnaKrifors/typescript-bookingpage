{"ast":null,"code":"var _jsxFileName = \"/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport Layout from './components/Layout';\nimport BookingPage from './pages/BookingPage';\nimport AdminPage from './pages/AdminPage';\nimport PageBanner from './components/PageBanner';\nimport AddActivityPage from './pages/AddActivityPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({\n    username: '',\n    role: 'USER',\n    activities: [],\n    password: ''\n  });\n  const [activities, setActivities] = useState([]);\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/activities') // Använd rätt endpoint här\n    .then(response => response.json()).then(data => setActivities(data));\n  }, []);\n\n  // Uppdatera användarens aktivitetslista\n  function updateUserActivities(newActivity) {\n    const updatedUserActivities = [...loggedInUser.activities, newActivity];\n    setLoggedInUser({\n      ...loggedInUser,\n      activities: updatedUserActivities\n    });\n  }\n  function onAddActivity(id, title, content, date, maxCount) {\n    // Skapa en ny aktivitet med de givna parametrarna\n    const newActivity = {\n      id,\n      title,\n      content,\n      date,\n      maxCount\n    };\n\n    // Skapa en kopia av den befintliga activities-arrayen och lägg till den nya aktiviteten\n    const updatedActivities = [...activities, newActivity];\n\n    // Uppdatera activities-arrayen med den nya arrayen\n    setActivities(updatedActivities);\n\n    // Uppdatera användarens aktivitetslista\n    updateUserActivities(newActivity);\n  }\n  useEffect(() => {\n    const storedUserData = localStorage.getItem(\"loggedInUser\");\n    if (storedUserData) {\n      const user = JSON.parse(storedUserData);\n      const newUser = convertUser(user.username, user.role, user.activities, user.password);\n      setIsLoggedIn(true);\n      setLoggedInUser(newUser);\n    }\n  }, []);\n  function convertUser(username, role, activities, password) {\n    const newUser = {\n      username: username,\n      role: role,\n      activities: activities.map(activity => {\n        const newActivity = {\n          id: activity.id,\n          title: activity.title,\n          content: activity.content,\n          date: new Date(activity.date),\n          maxCount: activity.maxCount\n        };\n        return newActivity;\n      }),\n      password: password\n    };\n    return newUser;\n  }\n  function handleLogin(username, role, activities, password) {\n    setIsLoggedIn(true);\n    setLoggedInUser(convertUser(username, role, activities, password));\n    localStorage.setItem(\"loggedInUser\", JSON.stringify({\n      username,\n      role,\n      activities\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bookings\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PageBanner, {\n              ...loggedInUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(BookingPage, {\n              activities: activities,\n              onAddActivity: onAddActivity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PageBanner, {\n              ...loggedInUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(AdminPage, {\n              activities: activities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(AddActivityPage, {\n            activities: activities,\n            setActivities: setActivities,\n            onAddActivity: onAddActivity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7SuypXtSPgRMs70saZ/Lt4ALwbU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","LoginPage","Layout","BookingPage","AdminPage","PageBanner","AddActivityPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","loggedInUser","setLoggedInUser","username","role","activities","password","setActivities","fetch","then","response","json","data","updateUserActivities","newActivity","updatedUserActivities","onAddActivity","id","title","content","date","maxCount","updatedActivities","storedUserData","localStorage","getItem","user","JSON","parse","newUser","convertUser","map","activity","Date","handleLogin","setItem","stringify","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","onLogin","_c","$RefreshReg$"],"sources":["/Users/annakrifors/Documents/Documents/Anna Kodjobb/Bookingpage/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './pages/LoginPage';\nimport Layout from './components/Layout';\nimport BookingPage from './pages/BookingPage';\nimport AdminPage from './pages/AdminPage';\nimport { Activity } from './types/Activity';\nimport PageBanner from './components/PageBanner';\nimport { UserRole } from './types/User';\nimport AddActivityPage from './pages/AddActivityPage';\nimport { User } from './types/User';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState({ username: '', role: 'USER' as UserRole, activities: [] as Activity[], password: '' });\n  const [activities, setActivities] = useState([] as Activity[]);\n\n  useEffect(() => {\n    // Hämta aktivitetsdata från MirageJS\n    fetch('/activities') // Använd rätt endpoint här\n      .then((response) => response.json())\n      .then((data) => setActivities(data));\n  }, []);\n\n  // Uppdatera användarens aktivitetslista\n  function updateUserActivities(newActivity) {\n    const updatedUserActivities = [...loggedInUser.activities, newActivity];\n    setLoggedInUser({ ...loggedInUser, activities: updatedUserActivities });\n  }\n\n  function onAddActivity(id, title, content, date, maxCount) {\n    // Skapa en ny aktivitet med de givna parametrarna\n    const newActivity = {\n      id,\n      title,\n      content,\n      date,\n      maxCount,\n    };\n\n    // Skapa en kopia av den befintliga activities-arrayen och lägg till den nya aktiviteten\n    const updatedActivities = [...activities, newActivity];\n\n    // Uppdatera activities-arrayen med den nya arrayen\n    setActivities(updatedActivities);\n\n    // Uppdatera användarens aktivitetslista\n    updateUserActivities(newActivity);\n  }\n\n  useEffect(() => {\n    const storedUserData = localStorage.getItem(\"loggedInUser\");\n    if (storedUserData) {\n      const user = JSON.parse(storedUserData);\n      const newUser: User = convertUser(user.username, user.role, user.activities, user.password);\n      setIsLoggedIn(true);\n      setLoggedInUser(newUser);\n    }\n  }, []);\n\n  function convertUser(username, role, activities, password) {\n    const newUser = {\n      username: username,\n      role: role,\n      activities: activities.map((activity) => {\n        const newActivity = {\n          id: activity.id,\n          title: activity.title,\n          content: activity.content,\n          date: new Date(activity.date),\n          maxCount: activity.maxCount,\n        };\n        return newActivity;\n      }),\n      password: password,\n    };\n    return newUser;\n  }\n\n  function handleLogin(username, role, activities, password) {\n    setIsLoggedIn(true);\n    setLoggedInUser(convertUser(username, role, activities, password));\n    localStorage.setItem(\"loggedInUser\", JSON.stringify({ username, role, activities }));\n  }\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path='/' element={<Layout />}>\n          <Route index element={<LoginPage onLogin={handleLogin} />} />\n          <Route\n            path=\"/bookings\"\n            element={\n              <>\n                {isLoggedIn && <PageBanner {...loggedInUser} />}\n                <BookingPage activities={activities} onAddActivity={onAddActivity} />\n              </>\n            }\n          />\n          <Route\n            path=\"/admin\"\n            element={\n              <>\n                {isLoggedIn && <PageBanner {...loggedInUser} />}\n                <AdminPage activities={activities} />\n              </>\n            }\n          />\n          <Route path=\"/add\" element={<AddActivityPage activities={activities} setActivities={setActivities} onAddActivity={onAddActivity} />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}